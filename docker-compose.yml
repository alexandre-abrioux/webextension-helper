version: '3.7'

networks:
  reverse-proxy:
    external: true
    name: ${COMPOSE_NETWORK_REVERSE_PROXY}
  back:
    internal: true

services:

  nginx:
    container_name: ${COMPOSE_PROJECT_NAME}_nginx
    image: webextension-helper/nginx
    build: docker/nginx
    restart: always
    networks:
      - reverse-proxy
      - back
    depends_on:
      - php
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=${COMPOSE_NETWORK_REVERSE_PROXY}"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.rule=Host(`${HOSTNAME}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-http.entrypoints=web"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.rule=Host(`${HOSTNAME}`)"
      - "traefik.http.routers.${COMPOSE_PROJECT_NAME}-https.entrypoints=websecure"
      - "traefik.http.services.${COMPOSE_PROJECT_NAME}.loadbalancer.server.port=80"

  php:
    container_name: ${COMPOSE_PROJECT_NAME}_php
    image: webextension-helper/php
    build: docker/php
    restart: ${COMPOSE_RESTART}
    networks:
      - back
    volumes:
      - ..:/usr/src/app/
    environment:
      - WEB_EXT_ARTIFACTS_DIR=${WEB_EXT_ARTIFACTS_DIR}
      - WEB_EXT_SOURCE_DIR=${WEB_EXT_SOURCE_DIR}

  web-ext:
    container_name: ${COMPOSE_PROJECT_NAME}_web-ext
    image: webextension-helper/web-ext
    build: docker/web-ext
    restart: no
    volumes:
      - ..:/usr/src/app/
    env_file:
      - .env
